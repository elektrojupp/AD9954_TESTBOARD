#ifndef __AD9954_H__
#define __AD9954_H__

// includes 
#include "stm32l4xx_hal.h"
#include "cmsis_os.h"

#define AD9954_Delay					osDelay

// AD9954 3V3 logic inputs
#define AD9954_RESET_PIN				GPIO_PIN_5		
#define AD9954_RESET_GPIO_Port 			GPIOC
#define AD9954_OSK_PIN					GPIO_PIN_2
#define AD9954_OSK_GPIO_Port 			GPIOC
#define AD9954_IOUPDATE_PIN				GPIO_PIN_1
#define AD9954_IOUPDATE_GPIO_Port		GPIOA
#define AD9954_PS0_PIN					GPIO_PIN_3
#define AD9954_PS0_GPIO_Port			GPIOC
#define AD9954_PS1_PIN					GPIO_PIN_2				
#define AD9954_PS1_GPIO_Port			GPIOA	
#define AD9954_IOSYNC_PIN				GPIO_PIN_4	
#define AD9954_IOSYNC_GPIO_Port			GPIOC	
#define AD9954_PWRDNCTL_PIN				GPIO_PIN_0
#define AD9954_PWRDNCTL_GPIO_Port		GPIOB	
#define AD9954_SYNCIN_PIN				GPIO_PIN_3
#define AD9954_SYNCIN_GPIO_Port 		GPIOA

// AD9954 1V8 logic input
#define AD9954_CLKMODESELECT_PIN		GPIO_PIN_0
#define AD9954_CLKMODESELECT_GPIO_Port	GPIOA

// AD9954 outputs
#define AD9954_SYNCCLK_Pin 				GPIO_PIN_1
#define AD9954_SYNCCLK_GPIO_Port 		GPIOC


// AD9954 SPI pins
#define AD9954_SPI_HANDLE				hspi1
#define AD9954_SPI_NSS_Pin 				GPIO_PIN_4
#define AD9954_SPI_NSS_GPIO_Port 		GPIOA
#define AD9954_SPI_SCLK_Pin 			GPIO_PIN_5
#define AD9954_SPI_SCLK_GPIO_Port 		GPIOA
#define AD9954_SPI_MISO_Pin 			GPIO_PIN_6
#define AD9954_SPI_MISO_GPIO_Port 		GPIOA
#define AD9954_SPI_MOSI_Pin 			GPIO_PIN_7
#define AD9954_SPI_MOSI_GPIO_Port 		GPIOA



#define AD9954_REFCLOCK					25000000 	//25.000.000 Hz
#define AD9954_CLK_MULTIPLIER			16			// between 4 and 20



// REG address definitions
#define CFR1_REGISTER_ADDRESS			0x00
#define	CFR2_REGISTER_ADDRESS			0x01
#define ASF_REGISTER_ADDRESS			0x02
#define	ARR_REGISTER_ADDRESS			0x03
#define	FTW0_REGISTER_ADDRESS			0x04
#define	POW0_REGISTER_ADDRESS			0x05
#define	FTW1_REGISTER_ADDRESS			0x06
#define	RSCW0_REGISTER_ADDRESS			0x07
#define RSCW1_REGISTER_ADDRESS			0x08
#define RSCW2_REGISTER_ADDRESS			0x09
#define RSCW3_REGISTER_ADDRESS			0x0A
#define	RAM_REGISTER_ADDRESS			0x0B

// in case linear sweep bit is enabled (CFR1 <21> = 1)
#define	NLSCW_REGISTER_ADDRESS			0x07
#define PLSCW_REGISTER_ADDRESS			0x08

/*
#define CRF1_REGISTER_SIZE 				4
#define CRF2_REGISTER_SIZE				3
#define ASF_REGISTER_SIZE				2
#define ARR_REGISTER_SIZE				1
#define FTW0_REGISTER_SIZE				4
#define POW0_REGISTER_SIZE				2
#define FTW1_REGISTER_SIZE				4
#define RSCW0_REGISTER_SIZE				5
#define RSCW1_REGISTER_SIZE				5
#define RSCW3_REGISTER_SIZE				5
#define RSCW4_REGISTER_SIZE				5
#define NLSCW_REGISTER_SIZE				5
#define PLSCW_REGISTER_SIZE				5
*/
//#define	RAM_DATA_SIZE					1024
#define RAM_DATA_SIZE						1024

#define NUMBER_OF_READABLE_REGISTERS		14
#define NUMBER_OF_REGISTERS					14

// CFR1
#define CRF1_REGISTER_SIZE 						4
// BIT 0 not used
// BIT 1
#define CFR1_SYNC_CLK_DISABLE_Pos       		(1U)
#define CFR1_SYNC_CLK_DISABLE_Msk      			(0x1UL << CFR1_SYNC_CLK_DISABLE_Pos)
#define CFR1_SYNC_CLK_DISABLE          			CFR1_SYNC_CLK_DISABLE_Msk
// BIT 2
#define CFR1_LINEAR_SWEEP_NO_DWELL_Pos  		(2U)
#define CFR1_LINEAR_SWEEP_NO_DWELL_Msk  		(0x1UL << CFR1_LINEAR_SWEEP_NO_DWELL_Pos)
#define CFR1_LINEAR_SWEEP_NO_DWELL      		CFR1_LINEAR_SWEEP_NO_DWELL_Msk
// BIT 3
#define CFR1_EXTERNAL_POWER_DOWN_MODE_Pos  		(3U)
#define CFR1_EXTERNAL_POWER_DOWN_MODE_Msk  		(0x1UL << CFR1_EXTERNAL_POWER_DOWN_MODE_Pos)
#define CFR1_EXTERNAL_POWER_DOWN_MODE		    CFR1_EXTERNAL_POWER_DOWN_MODE_Msk
// BIT 4
#define CFR1_CLOCK_INPUT_POWER_DOWN_Pos  		(4U)
#define CFR1_CLOCK_INPUT_POWER_DOWN_Msk  		(0x1UL << CFR1_CLOCK_INPUT_POWER_DOWN_Pos)
#define CFR1_CLOCK_INPUT_POWER_DOWN     		CFR1_CLOCK_INPUT_POWER_DOWN_Msk
// BIT 5
#define CFR1_DAC_POWER_DOWN_Pos  				(5U)
#define CFR1_DAC_POWER_DOWN_Msk  				(0x1UL << CFR1_DAC_POWER_DOWN_Pos)
#define CFR1_DAC_POWER_DOWN     				CFR1_DAC_POWER_DOWN_Msk
// BIT 6
#define CFR1_COMP_POWER_DOWN_Pos  				(6U)
#define CFR1_COMP_POWER_DOWN_Msk  				(0x1UL << CFR1_COMP_POWER_DOWN_Pos)
#define CFR1_COMP_POWER_DOWN     				CFR1_COMP_POWER_DOWN_Msk
// BIT 7
#define CFR1_DIGITAL_POWER_DOWN_Pos  			(7U)
#define CFR1_DIGITAL_POWER_DOWN_Msk  			(0x1UL << CFR1_DIGITAL_POWER_DOWN_Pos)
#define CFR1_DIGITAL_POWER_DOWN     			CFR1_DIGITAL_POWER_DOWN_Msk
// BIT 8
#define CFR1_LSB_FIRST_Pos       				(8U)
#define CFR1_LSB_FIRST_Msk      				(0x1UL << CFR1_LSB_FIRST_Pos)
#define CFR1_LSB_FIRST          				CFR1_LSB_FIRST_Msk
// BIT 9
#define CFR1_SDIO_INPUT_ONLY_Pos  				(9U)
#define CFR1_SDIO_INPUT_ONLY_Msk  				(0x1UL << CFR1_SDIO_INPUT_ONLY_Pos)
#define CFR1_SDIO_INPUT_ONLY      				CFR1_SDIO_INPUT_ONLY_Msk
// BIT 10
#define CFR1_CLEAR_PHASE_ACCUM_Pos  			(10U)
#define CFR1_CLEAR_PHASE_ACCUM_Msk  			(0x1UL << CFR1_CLEAR_PHASE_ACCUM_Pos)
#define CFR1_CLEAR_PHASE_ACCUM		    		CFR1_CLEAR_PHASE_ACCUM_Msk
// BIT 11
#define CFR1_CLEAR_FREQ_ACCUM_Pos  				(11U)
#define CFR1_CLEAR_FREQ_ACCUM_Msk  				(0x1UL << CFR1_CLEAR_FREQ_ACCUM_Pos)
#define CFR1_CLEAR_FREQ_ACCUM		    		CFR1_CLEAR_FREQ_ACCUM_Msk
// BIT 12
#define CFR1_SINE_COSINE_SELECT_Pos  			(12U)
#define CFR1_SINE_COSINE_SELECT_Msk  			(0x1UL << CFR1_SINE_COSINE_SELECT_Pos)
#define CFR1_SINE_COSINE_SELECT		     		CFR1_SINE_COSINE_SELECT_Msk
// BIT 13
#define CFR1_AUTOCLR_PHASE_ACCUM_Pos  			(13U)
#define CFR1_AUTOCLR_PHASE_ACCUM_Msk  			(0x1UL << CFR1_AUTOCLR_PHASE_ACCUM_Pos)
#define CFR1_AUTOCLR_PHASE_ACCUM		    	CFR1_AUTOCLR_PHASE_ACCUM_Msk
// BIT 14
#define CFR1_AUTOCLR_FREQ_ACCUM_Pos  			(14U)
#define CFR1_AUTOCLR_FREQ_ACCUM_Msk  			(0x1UL << CFR1_AUTOCLR_FREQ_ACCUM_Pos)
#define CFR1_AUTOCLR_FREQ_ACCUM		    		CFR1_AUTOCLR_FREQ_ACCUM_Msk
// BIT 15
#define CFR1_SRR_LOAD_ENABLE_Pos  				(15U)
#define CFR1_SRR_LOAD_ENABLE_Msk  				(0x1UL << CFR1_SRR_LOAD_ENABLE_Pos)
#define CFR1_SRR_LOAD_ENABLE    				CFR1_SRR_LOAD_ENABLE_Msk
// BIT 16 - 20 not used
// BIT 21
#define CFR1_LINEAR_SWEEP_ENABLE_Pos  			(21U)
#define CFR1_LINEAR_SWEEP_ENABLE_Msk  			(0x1UL << CFR1_LINEAR_SWEEP_ENABLE_Pos)
#define CFR1_LINEAR_SWEEP_ENABLE   				CFR1_LINEAR_SWEEP_ENABLE_Msk
// BIT 22
#define CFR1_SOFTWARE_MANUAL_SYNC_Pos  			(22U)
#define CFR1_SOFTWARE_MANUAL_SYNC_Msk  			(0x1UL << CFR1_SOFTWARE_MANUAL_SYNC_Pos)
#define CFR1_SOFTWARE_MANUAL_SYNC   			CFR1_SOFTWARE_MANUAL_SYNC_Msk
// BIT 23
#define CFR1_AUTOMATIC_SYNC_ENABLE_Pos  		(23U)
#define CFR1_AUTOMATIC_SYNC_ENABLE_Msk  		(0x1UL << CFR1_AUTOMATIC_SYNC_ENABLE_Pos)
#define CFR1_AUTOMATIC_SYNC_ENABLE    			CFR1_AUTOMATIC_SYNC_ENABLE_Msk
// BIT 24
#define CFR1_AUTO_OSK_ENABLE_Pos  				(24U)
#define CFR1_AUTO_OSK_ENABLE_Msk  				(0x1UL << CFR1_AUTO_OSK_ENABLE_Pos)
#define CFR1_AUTO_OSK_ENABLE    				CFR1_AUTO_OSK_ENABLE_Msk
// BIT 25
#define CFR1_OSK_ENABLE_Pos  					(25U)
#define CFR1_OSK_ENABLE_Msk  					(0x1UL << CFR1_OSK_ENABLE_Pos)
#define CFR1_OSK_ENABLE    						CFR1_OSK_ENABLE_Msk
// BIT 26
#define CFR1_LOAD_ARR_CONTROLL_Pos  			(26U)
#define CFR1_LOAD_ARR_CONTROLL_Msk  			(0x1UL << CFR1_LOAD_ARR_CONTROLL_Pos)
#define CFR1_LOAD_ARR_CONTROLL    				CFR1_LOAD_ARR_CONTROLL_Msk
// BIT 27 - 29
#define CFR1_INTERNAL_PROFILE_CONTROLL_Pos  	(27U)
#define CFR1_INTERNAL_PROFILE_CONTROLL_Msk  	(0x7UL << CFR1_INTERNAL_PROFILE_CONTROLL_Pos)
#define CFR1_INTERNAL_PROFILE_CONTROLL	    	CFR1_INTERNAL_PROFILE_CONTROLL_Msk
#define CFR1_INTERNAL_PROFILE_CONTROLL0	    	(0x1UL << CFR1_INTERNAL_PROFILE_CONTROLL_Pos)
#define CFR1_INTERNAL_PROFILE_CONTROLL1	    	(0x2UL << CFR1_INTERNAL_PROFILE_CONTROLL_Pos)
#define CFR1_INTERNAL_PROFILE_CONTROLL2	    	(0x4UL << CFR1_INTERNAL_PROFILE_CONTROLL_Pos)
// BIT 30
#define CFR1_RAM_DESTINATION_Pos  				(30U)
#define CFR1_RAM_DESTINATION_Msk  				(0x1UL << CFR1_RAM_DESTINATION_Pos)
#define CFR1_RAM_DESTINATION    				CFR1_RAM_DESTINATION_Msk
// BIT 31
#define CFR1_RAM_ENABLE_Pos  					(31U)
#define CFR1_RAM_ENABLE_Msk  					(0x1UL << CFR1_RAM_ENABLE_Pos)
#define CFR1_RAM_ENABLE    						CFR1_RAM_ENABLE_Msk

// CFR2
#define CRF2_REGISTER_SIZE						3
// BIT 0 - 1
#define CFR2_CHARGE_PUMP_CURRENT_Pos  			(0U)
#define CFR2_CHARGE_PUMP_CURRENT_Msk  			(0x1UL << CFR2_CHARGE_PUMP_CURRENT_Pos)
#define CFR2_CHARGE_PUMP_CURRENT	    		CFR2_CHARGE_PUMP_CURRENT_Msk
#define CFR2_CHARGE_PUMP_CURRENT0    			(0x1UL << CFR2_CHARGE_PUMP_CURRENT_Pos)
// BIT 2
#define CFR2_VCO_RANGE_Pos  					(2U)
#define CFR2_VCO_RANGE_Msk  					(0x1UL << CFR2_VCO_RANGE_Pos)
#define CFR2_VCO_RANGE   						CFR2_VCO_RANGE_Msk
// BIT 3-7
#define CFR2_REFCLK_MULTIPLIER_Pos  			(3U)
#define CFR2_REFCLK_MULTIPLIER_Msk  			(0x1FUL << CFR2_REFCLK_MULTIPLIER_Pos)
#define CFR2_REFCLK_MULTIPLIER    				CFR2_REFCLK_MULTIPLIER_Msk
#define CFR2_REFCLK_MULTIPLIER0   				(0x1UL << CFR2_REFCLK_MULTIPLIER_Pos)
#define CFR2_REFCLK_MULTIPLIER1   				(0x2UL << CFR2_REFCLK_MULTIPLIER_Pos)
#define CFR2_REFCLK_MULTIPLIER2   				(0x4UL << CFR2_REFCLK_MULTIPLIER_Pos)
#define CFR2_REFCLK_MULTIPLIER3   				(0x8UL << CFR2_REFCLK_MULTIPLIER_Pos)
#define CFR2_REFCLK_MULTIPLIER4   				(0xFUL << CFR2_REFCLK_MULTIPLIER_Pos)
// BIT 8 not used
// BIT 9
#define CFR2_XTAL_OUT_ENABLE_Pos  				(9U)
#define CFR2_XTAL_OUT_ENABLE_Msk  				(0x1UL << CFR2_XTAL_OUT_ENABLE_Pos)
#define CFR2_XTAL_OUT_ENABLE    				CFR2_XTAL_OUT_ENABLE_Msk
// BIT 10
#define CFR2_HARDWARE_MANUAL_SYNC_ENABLE_Pos  	(10U)
#define CFR2_HARDWARE_MANUAL_SYNC_ENABLE_Msk  	(0x1UL << CFR2_HARDWARE_MANUAL_SYNC_ENABLE_Pos)
#define CFR2_HARDWARE_MANUAL_SYNC_ENABLE    	CFR2_HARDWARE_MANUAL_SYNC_ENABLE_Msk
// BIT 11
#define CFR2_HIGH_SPEED_SYNC_ENABLE_Pos  		(11U)
#define CFR2_HIGH_SPEED_SYNC_ENABLE_Msk  		(0x1UL << CFR2_HIGH_SPEED_SYNC_ENABLE_Pos)
#define CFR2_HIGH_SPEED_SYNC_ENABLE    			CFR2_HIGH_SPEED_SYNC_ENABLE_Msk
// BIT 16 - 23 not used

// ASF
#define ASF_REGISTER_SIZE						2
// BIT 0 - 13
#define ASF_AMPLITUDE_SCALE_FACTOR_Pos  		(0U)
#define ASF_AMPLITUDE_SCALE_FACTOR_Msk 			(0b0011111111111111 << ASF_AMPLITUDE_SCALE_FACTOR_Pos)
#define ASF_AMPLITUDE_SCALE_FACTOR				ASF_AMPLITUDE_SCALE_FACTOR_Msk
/*
#define ASF_REFCLK_MULTIPLIER_Pos  				(0U)
#define ASF_REFCLK_MULTIPLIER_Msk  				(0x3FFFUL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER    				ASF_REFCLK_MULTIPLIER_Msk
#define ASF_REFCLK_MULTIPLIER0   				(0x1UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER1   				(0x2UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER2   				(0x4UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER3   				(0x8UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER4   				(0x10UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER5   				(0x20UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER6   				(0x40UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER7   				(0x80UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER8   				(0x100UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER9   				(0x200UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER10   				(0x400UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER11   				(0x800UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER12   				(0x1000UL << ASF_REFCLK_MULTIPLIER_Pos)
#define ASF_REFCLK_MULTIPLIER13  				(0x2000UL << ASF_REFCLK_MULTIPLIER_Pos)
*/
// BIT 14 - 15
#define ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_Pos  		(14U)
#define ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_Msk  		(0x2UL << ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_Pos)
#define ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_ENABLE   	ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_Msk
#define ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_ENABLE0  	(0x1UL << ASF_AUTO_RAMP_RATE_SPEED_CONTROLL_Pos)

// ARR
#define ARR_REGISTER_SIZE						1
// BIT 0 - 7
#define ARR_AMPLITUDE_RAMP_RATE_Pos  			(0U)
#define ARR_AMPLITUDE_RAMP_RATE_Msk 			(0xFFUL << ARR_AMPLITUDE_RAMP_RATE_Pos)
#define ARR_AMPLITUDE_RAMP_RATE					ARR_AMPLITUDE_RAMP_RATE_Msk

// FTW0
#define FTW0_REGISTER_SIZE						4
// BIT 0 - 31
#define FTW0_FREQUENCY_TUNING_WORD0_Pos  		(0U)
#define FTW0_FREQUENCY_TUNING_WORD0_Msk 		(0xFFFFFFFF << FTW0_FREQUENCY_TUNING_WORD0_Pos)
#define FTW0_FREQUENCY_TUNING_WORD0				FTW0_FREQUENCY_TUNING_WORD0_Msk

// POW0
#define POW0_REGISTER_SIZE						2
// BIT 0 - 13
#define POW0_PHASE_OFFSET_WORD_Pos  			(0U)
#define POW0_PHASE_OFFSET_WORD_Msk 				(0b0011111111111111 << POW0_PHASE_OFFSET_WORD_Pos)
#define POW0_PHASE_OFFSET_WORD					POW0_PHASE_OFFSET_WORD_Msk
// BIT 14 - 15 not used

// FTW1
#define FTW1_REGISTER_SIZE						4
// BIT 0 - 31
#define FTW1_FREQUENCY_TUNING_WORD1_Pos  		(0U)
#define FTW1_FREQUENCY_TUNING_WORD1_Msk 		(0xFFFFFFFF << FTW1_FREQUENCY_TUNING_WORD1_Pos)
#define FTW1_FREQUENCY_TUNING_WORD1				FTW1_FREQUENCY_TUNING_WORD1_Msk

// RSCW0
#define RSCW0_REGISTER_SIZE						5
// BIT 0 - 3
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_9_6_Pos 	(0U)
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_9_6_Msk 	(0xFUL << RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_9_6_Pos)
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_9_6		RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_9_6_Msk
// BIT 4
#define RSCW0_NO_DWELL_ACTIVE_Pos 						(4U)
#define RSCW0_NO_DWELL_ACTIVE_Msk 						(0x1UL << RSCW0_NO_DWELL_ACTIVE_Pos)
#define RSCW0_NO_DWELL_ACTIVE							RSCW0_NO_DWELL_ACTIVE_Msk
// BIT 5 - 7
#define RSCW0_RAM_SEGMENT0_MODE_CONTROLL_Pos 			(5U)
#define RSCW0_RAM_SEGMENT0_MODE_CONTROLL_Msk 			(0x7UL << RSCW0_RAM_SEGMENT0_MODE_CONTROLL_Pos)
#define RSCW0_RAM_SEGMENT0_MODE_CONTROLL				RSCW0_RAM_SEGMENT0_MODE_CONTROLL_Msk
// BIT 8 - 9
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_9_8_Pos 		(8U)
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_9_8_Msk 		(0x3UL << RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_9_8_Pos)
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_9_8			RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_9_8_Msk
// BIT 10 - 15
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_5_0_Pos 	(10U)
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_5_0_Msk 	(0x1FUL << RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_5_0_Pos)
#define RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_5_0		RSCW0_RAM_SEGMENT0_BEGINNING_ADDRESS_5_0_Msk
// BIT 16 - 23
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_7_0_Pos 		(16U)
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_7_0_Msk 		(0xFF << RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_7_0_Pos)
#define RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_7_0			RSCW0_RAM_SEGMENT0_FINAL_ADDRESS_7_0_Msk
// BIT 24 - 31
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_15_8_Pos 	(24U)
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_15_8_Msk 	(0xFF << RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_15_8_Pos)
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_15_8		RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_15_8_Msk
// BIT 32 - 39
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_7_0_Pos 	(32U)
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_7_0_Msk 	(0xFF << RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_7_0_Pos)
#define RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_7_0		RSCW0_RAM_SEGMENT0_ADDRESS_RAMP_RATE_7_0_Msk

// RSCW1
#define RSCW1_REGISTER_SIZE						5
// BIT 0 - 3
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_9_6_Pos 	(0U)
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_9_6_Msk 	(0xFUL << RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_9_6_Pos)
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_9_6		RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_9_6_Msk
// BIT 4
#define RSCW1_NO_DWELL_ACTIVE_Pos 						(4U)
#define RSCW1_NO_DWELL_ACTIVE_Msk 						(0x1UL << RSCW1_NO_DWELL_ACTIVE_Pos)
#define RSCW1_NO_DWELL_ACTIVE							RSCW1_NO_DWELL_ACTIVE
// BIT 5 - 7
#define RSCW1_RAM_SEGMENT1_MODE_CONTROLL_Pos 			(5U)
#define RSCW1_RAM_SEGMENT1_MODE_CONTROLL_Msk 			(0x7UL << RSCW1_RAM_SEGMENT1_MODE_CONTROLL_Pos)
#define RSCW1_RAM_SEGMENT1_MODE_CONTROLL				RSCW1_RAM_SEGMENT1_MODE_CONTROLL_Msk
// BIT 8 - 9
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_9_8_Pos 		(8U)
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_9_8_Msk 		(0x3UL << RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_9_8_Pos)
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_9_8			RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_9_8_Msk
// BIT 10 - 15
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_5_0_Pos 	(10U)
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_5_0_Msk 	(0x1FUL << RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_5_0_Pos)
#define RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_5_0		RSCW1_RAM_SEGMENT1_BEGINNING_ADDRESS_5_0_Msk
// BIT 16 - 3
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_7_0_Pos 		(16U)
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_7_0_Msk 		(0xFF << RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_7_0_Pos)
#define RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_7_0			RSCW1_RAM_SEGMENT1_FINAL_ADDRESS_7_0_Msk
// BIT 24 - 31
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_15_8_Pos 	(24U)
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_15_8_Msk 	(0xFF << RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_15_8_Pos)
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_15_8		RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_15_8_Msk
// BIT 32 - 39
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_7_0_Pos 	(32U)
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_7_0_Msk 	(0xFF << RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_7_0_Pos)
#define RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_7_0		RSCW1_RAM_SEGMENT1_ADDRESS_RAMP_RATE_7_0_Msk

// RSCW2
#define RSCW2_REGISTER_SIZE						5
// BIT 0 - 3
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_9_6_Pos 	(0U)
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_9_6_Msk 	(0xFUL << RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_9_6_Pos)
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_9_6		RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS
// BIT 4
#define RSCW2_NO_DWELL_ACTIVE_Pos 						(4U)
#define RSCW2_NO_DWELL_ACTIVE_Msk 						(0x1UL << RSCW2_NO_DWELL_ACTIVE_Pos)
#define RSCW2_NO_DWELL_ACTIVE							RSCW2_NO_DWELL_ACTIVE
// BIT 5 - 7
#define RSCW2_RAM_SEGMENT2_MODE_CONTROLL_Pos 			(5U)
#define RSCW2_RAM_SEGMENT2_MODE_CONTROLL_Msk 			(0x7UL << RSCW2_RAM_SEGMENT2_MODE_CONTROLL_Pos)
#define RSCW2_RAM_SEGMENT2_MODE_CONTROLL				RSCW2_RAM_SEGMENT2_MODE_CONTROLL_Msk
// BIT 8 - 9
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_9_8_Pos 		(8U)
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_9_8_Msk 		(0x3UL << RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_9_8_Pos)
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_9_8			RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_9_8_Msk
// BIT 10 - 15
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_5_0_Pos 	(10U)
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_5_0_Msk 	(0x1FUL << RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_5_0_Pos)
#define RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_5_0		RSCW2_RAM_SEGMENT2_BEGINNING_ADDRESS_5_0_Msk
// BIT 16 - 23
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_7_0_Pos 		(16U)
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_7_0_Msk 		(0xFF << RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_7_0_Pos)
#define RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_7_0			RSCW2_RAM_SEGMENT2_FINAL_ADDRESS_7_0_Msk
// BIT 24 - 31
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_15_8_Pos 	(24U)
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_15_8_Msk 	(0xFF << RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_15_8_Pos)
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_15_8		RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_15_8_Msk
// BIT 32 - 39
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_7_0_Pos 	(32U)
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_7_0_Msk 	(0xFF << RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_7_0_Pos)
#define RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_7_0		RSCW2_RAM_SEGMENT2_ADDRESS_RAMP_RATE_7_0_Msk

// RSCW3
#define RSCW3_REGISTER_SIZE						5
// BIT 0 - 3
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_9_6_Pos 	(0U)
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_9_6_Msk 	(0xFUL << RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_9_6_Pos)
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_9_6		RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS
// BIT 4
#define RSCW3_NO_DWELL_ACTIVE_Pos 						(4U)
#define RSCW3_NO_DWELL_ACTIVE_Msk 						(0x1UL << RSCW3_NO_DWELL_ACTIVE_Pos)
#define RSCW3_NO_DWELL_ACTIVE							RSCW3_NO_DWELL_ACTIVE
// BIT 5 - 7
#define RSCW3_RAM_SEGMENT3_MODE_CONTROLL_Pos 			(5U)
#define RSCW3_RAM_SEGMENT3_MODE_CONTROLL_Msk 			(0x7UL << RSCW3_RAM_SEGMENT3_MODE_CONTROLL_Pos)
#define RSCW3_RAM_SEGMENT3_MODE_CONTROLL				RSCW3_RAM_SEGMENT3_MODE_CONTROLL_Msk
// BIT 8 - 9
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_9_8_Pos 		(8U)
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_9_8_Msk 		(0x3UL << RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_9_8_Pos)
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_9_8			RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_9_8_Msk
// BIT 10 - 15
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_5_0_Pos 	(10U)
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_5_0_Msk 	(0x1FUL << RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_5_0_Pos)
#define RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_5_0		RSCW3_RAM_SEGMENT3_BEGINNING_ADDRESS_5_0_Msk
// BIT 16 - 23
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_7_0_Pos 		(16U)
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_7_0_Msk 		(0xFF << RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_7_0_Pos)
#define RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_7_0			RSCW3_RAM_SEGMENT3_FINAL_ADDRESS_7_0_Msk
// BIT 24 - 31
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_15_8_Pos 	(24U)
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_15_8_Msk 	(0xFF << RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_15_8_Pos)
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_15_8		RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_15_8_Msk
// BIT 32 - 39
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_7_0_Pos 	(32U)
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_7_0_Msk 	(0xFF << RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_7_0_Pos)
#define RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_7_0		RSCW3_RAM_SEGMENT3_ADDRESS_RAMP_RATE_7_0_Msk

// NLSCW
#define NLSCW_REGISTER_SIZE								5
// BIT 0 - 31
#define NLSCW_FALLING_DELTA_FREQUENCY_TUNING_WORD_Pos  	(0U)
#define NLSCW_FALLING_DELTA_FREQUENCY_TUNING_WORD_Msk 	(0xFFFFFFFF << NLSCW_FALLING_DELTA_FREQUENCY_TUNING_WORD_Pos)
#define NLSCW_FALLING_DELTA_FREQUENCY_TUNING_WORD		NLSCW_FALLING_DELTA_FREQUENCY_TUNING_WORD_Msk
// BIT 32 - 39
#define NLSCW_FALLING_SWEEP_RAMP_RATE_WORD_Pos  		(32U)
#define NLSCW_FALLING_SWEEP_RAMP_RATE_WORD_Msk 			(0xFF << NLSCW_FALLING_SWEEP_RAMP_RATE_WORD_Pos)
#define NLSCW_FALLING_SWEEP_RAMP_RATE_WORD				NLSCW_FALLING_SWEEP_RAMP_RATE_WORD_Msk

// PLSCW
#define PLSCW_REGISTER_SIZE								5
// BIT 0 - 31
#define PLSCW_RISING_DELTA_FREQUENCY_TUNING_WORD_Pos  	(0U)
#define PLSCW_RISING_DELTA_FREQUENCY_TUNING_WORD_Msk 	(0xFFFFFFFF << PLSCW_RISING_DELTA_FREQUENCY_TUNING_WORD_Pos)
#define PLSCW_RISING_DELTA_FREQUENCY_TUNING_WORD		PLSCW_RISING_DELTA_FREQUENCY_TUNING_WORD_Msk
// BIT 32 - 39
#define PLSCW_RISING_SWEEP_RAMP_RATE_WORD_Pos  			(32U)
#define PLSCW_RISING_SWEEP_RAMP_RATE_WORD_Msk 			(0xFF << PLSCW_RISING_SWEEP_RAMP_RATE_WORD_Pos)
#define PLSCW_RISING_SWEEP_RAMP_RATE_WORD				PLSCW_RISING_SWEEP_RAMP_RATE_WORD_Msk


#define AD9954_MAX_FREQUENCY 180000000
#define AD9954_MIN_FREQUENCY 30000

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint8_t no_Dwell_Active;
	uint8_t RAM_Mode;
	uint16_t RAM_Beginning_Address;
	uint16_t RAM_Final_Address;
	uint16_t RAM_Ramp_Rate;
}AD9954_reg_rscw_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint8_t SYNC_CLK_disable;
	uint8_t Linear_Sweep_No_Dwell;
	uint8_t External_Power_Down_Mode;
	uint8_t Clock_Input_Power_Down;
	uint8_t DAC_Power_Down;
	uint8_t Comp_Power_Down;
	uint8_t Digital_Power_Down;
	uint8_t LSB_First;
	uint8_t SDIO_Input_Only;
	uint8_t Clear_Phase_Accum;
	uint8_t Clear_Freq_Accum;
	uint8_t Sine_Cosine_Select;
	uint8_t Auto_Clr_Phase_Accum;
	uint8_t Auto_Clr_Freq_Accum;
	uint8_t SRR_Load_Enable;
	uint8_t Linear_Sweep_Enable;
	uint8_t Software_Manual_Sync;
	uint8_t Automatic_Sync_Enable;
	uint8_t Auto_OSK_Enable;
	uint8_t OSK_Enable;
	uint8_t Load_ARR_Control;
	uint8_t Internal_Profile_Control;
	uint8_t RAM_Destination;
	uint8_t RAM_Enable;
}AD9954_reg_cfr1_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint8_t Charge_Pump_Current;
	uint8_t VCO_Range;
	uint8_t REFCLK_Multiplier;
	uint8_t XTAL_Out_Enable;
	uint8_t Hardware_Manual_Sync_Enable;
	uint8_t High_Speed_Sync_Enable;
}AD9954_reg_cfr2_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint16_t Amplitude_Scale_Factor;
	uint8_t Auto_Ramp_Rate_Speed_Controll;
}AD9954_reg_asf_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint8_t Amplitude_Ramp_Rate;
}AD9954_reg_arr_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint32_t Frequency_Tuning_Word;
}AD9954_reg_ftw_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint16_t Phase_Offset_Word;
}AD9954_reg_pow_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint32_t Falling_Delta_Frequency_Tuning_Word;
	uint8_t Falling_Sweep_Ramp_Word;
}AD9954_reg_nlscw_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;

	uint32_t Rising_Delta_Frequency_Tuning_Word;
	uint8_t Rising_Sweep_Ramp_Word;
}AD9954_reg_plscw_struct_t;

typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;
}AD9954_reg_ram_struct_t;


typedef struct
{
	uint8_t adress;
	uint16_t size;
	uint8_t *data;
}AD9954_reg_info_struct_t;

typedef struct
{
	AD9954_reg_cfr1_struct_t cfr1;
	AD9954_reg_cfr2_struct_t cfr2;
	AD9954_reg_asf_struct_t asf;
	AD9954_reg_arr_struct_t arr;
	AD9954_reg_ftw_struct_t ftw0;
	AD9954_reg_pow_struct_t pow0;
	AD9954_reg_ftw_struct_t ftw1;
	AD9954_reg_rscw_struct_t rscw0;
	AD9954_reg_rscw_struct_t rscw1;
	AD9954_reg_rscw_struct_t rscw2;
	AD9954_reg_rscw_struct_t rscw3;
	AD9954_reg_nlscw_struct_t nlscw;
	AD9954_reg_plscw_struct_t plscw;
	AD9954_reg_ram_struct_t ram;
	uint32_t frequency;

}AD9954_reg_struct_t;

typedef enum {
    AD9954_SET = 0x00,
    AD9954_RESET = 0x01
} AD9954_STATE_ENUM;

typedef enum
{
	AD9954_REG_COMMAND_READWRITE = 0b10000000000000000000000000000000,
	AD9954_REG_COMMAND_ALL       = 0b00000000000000000000000000000001,
	AD9954_REG_COMMAND_CFR1      = 0b00000000000000000000000000000010,
	AD9954_REG_COMMAND_CFR2      = 0b00000000000000000000000000000100,
	AD9954_REG_COMMAND_ASF       = 0b00000000000000000000000000001000,
	AD9954_REG_COMMAND_ARR       = 0b00000000000000000000000000010000,
	AD9954_REG_COMMAND_FTW0      = 0b00000000000000000000000000100000,
	AD9954_REG_COMMAND_FTW1      = 0b00000000000000000000000001000000,
	AD9954_REG_COMMAND_POW0      = 0b00000000000000000000000010000000,
	AD9954_REG_COMMAND_RSCW0     = 0b00000000000000000000000100000000,
	AD9954_REG_COMMAND_RSCW1     = 0b00000000000000000000001000000000,
	AD9954_REG_COMMAND_RSCW2     = 0b00000000000000000000010000000000,
	AD9954_REG_COMMAND_RSCW3     = 0b00000000000000000000100000000000,
	AD9954_REG_COMMAND_NLSCW     = 0b00000000000000000001000000000000,
	AD9954_REG_COMMAND_PLSCW     = 0b00000000000000000010000000000000,
	AD9954_REG_COMMAND_FREQ      = 0b00000000000000000100000000000000,
}AD9954_command_enum_t;

typedef struct
{
	osThreadId_t taskHandle;
	AD9954_command_enum_t command;
}AD99554_message_struct_t;

typedef struct
{
	uint8_t * data;
	uint16_t size;
	uint32_t minVal;
	uint32_t maxVal;
	AD9954_command_enum_t command;
}GUI_value_struct_t;

extern SPI_HandleTypeDef AD9954_SPI_HANDLE;
extern AD9954_reg_struct_t AD9954Register;

void AD9954_Init(void);
void AD9954_DeInit(void);
void AD9954_SetClockMul(uint32_t clockMultiplier);
void AD9954_Update(void); // update device
void AD9954_Reset(void); // reset device
void AD9954_ResetSerial(void); // reset serial communication
void AD9954_PowerDown(AD9954_STATE_ENUM state);
void AD9954_SetFrequency(uint32_t freq);
void AD9954_WriteRegister(uint8_t regaddress, uint16_t regsize, uint8_t *data);
void AD9954_ReadRegister(uint8_t regaddress, uint8_t regsize, uint8_t *data);
void AD9954_Test(void);
void AD9954_ReadAll(void);
void AD9954_WriteAll(void);
uint32_t AD9954_GetFrequency(void);

void AD9954_ReadCFR1(AD9954_reg_cfr1_struct_t *reg);
void AD9954_ReadCFR2(AD9954_reg_cfr2_struct_t *reg);
void AD9954_ReadASF(AD9954_reg_asf_struct_t *reg);
void AD9954_ReadARR(AD9954_reg_arr_struct_t *reg);
void AD9954_ReadFTW(AD9954_reg_ftw_struct_t *reg);
void AD9954_ReadFTW(AD9954_reg_ftw_struct_t *reg);
void AD9954_ReadPOW0(AD9954_reg_pow_struct_t *reg);
void AD9954_ReadNLSCW(AD9954_reg_nlscw_struct_t *reg);
void AD9954_ReadPLSCW(AD9954_reg_plscw_struct_t *reg);
void AD9954_ReadRSCW(AD9954_reg_rscw_struct_t *reg);

void AD9954_WriteCFR1(AD9954_reg_cfr1_struct_t *reg);
void AD9954_WriteCFR2(AD9954_reg_cfr2_struct_t *reg);
void AD9954_WriteASF(AD9954_reg_asf_struct_t *reg);
void AD9954_WriteARR(AD9954_reg_arr_struct_t *reg);
void AD9954_WriteFTW(AD9954_reg_ftw_struct_t *reg);
void AD9954_WritePOW0(AD9954_reg_pow_struct_t *reg);
void AD9954_WriteNLSCW(AD9954_reg_nlscw_struct_t *reg);
void AD9954_WritePLSCW(AD9954_reg_plscw_struct_t *reg);
void AD9954_WriteRSCW(AD9954_reg_rscw_struct_t *reg);

osThreadId_t readMessages(AD99554_message_struct_t *message);

#endif // AD9954_H







